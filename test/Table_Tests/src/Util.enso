from Standard.Base import all

from Standard.Table import Table, Column

from Standard.Test import Test
import Standard.Test.Extensions

polyglot java import org.enso.base_test_helpers.FileSystemHelper

Table.should_equal self expected =
    self_cols = self.columns
    that_cols = expected.columns
    self_cols.map .name . should_equal (that_cols.map .name) frames_to_skip=1
    self_cols.map .to_vector . should_equal (that_cols.map .to_vector) frames_to_skip=1

Table.should_equal_verbose self expected =
    tables_equal t0 t1 =
        same_headers = (t0.columns.map .name) == (t1.columns.map .name)
        same_columns = (t0.columns.map .to_vector) == (t1.columns.map .to_vector)
        same_headers && same_columns
    equal = tables_equal self expected
    if equal.not then
        msg = 'Tables differ.\nActual:\n' + self.display + '\nExpected:\n' + expected.display
        Test.fail msg

Column.should_equal self expected =
    if self.name != expected.name then
        Test.fail "Expected column name "+expected.name+", but got "+self.name+"."
    if self.length != expected.length then
        Test.fail "Expected column length "+expected.length.to_text+", but got "+self.length.to_text+"."
    self.to_vector.should_equal expected.to_vector

normalize_lines string line_separator=Line_Ending_Style.Unix.to_text newline_at_end=True =
    case newline_at_end of
        True -> string.lines.join line_separator suffix=line_separator
        False -> string.lines.join line_separator

set_writable file writable =
    path = file.absolute.path
    FileSystemHelper.setWritable path writable

from Standard.Base import all

from Standard.Test import Bench, Faker


options = Bench.options . set_warmup (Bench.phase_conf 1 5) . set_measure (Bench.phase_conf 1 3)


type Data
    Value ~decimal_strings ~int_strings

    create vector_size faker =
        Data.Value (create_decimal_strings vector_size faker) (create_int_strings vector_size faker)


create_decimal_strings vector_size faker =
    Vector.new vector_size _->(faker.decimal -1000000000 1000000000).to_text


create_int_strings vector_size faker =
    Vector.new vector_size _->(faker.integer -1000000000 1000000000).to_text


collect_benches = Bench.build builder->
    vector_size = 500 * 1000
    ## No specific significance to this constant, just fixed to make generated set deterministic
    fixed_random_seed = 1644575867
    faker = Faker.new fixed_random_seed

    data = Data.create vector_size faker

    builder.group "Number_Parse" options group_builder->
        group_builder.specify "decimal_parse" <|
            data.decimal_strings.map Decimal.parse

        group_builder.specify "integer_parse" <|
            data.int_strings.map Integer.parse


main = collect_benches . run_main

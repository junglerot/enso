from Standard.Base import all

from Standard.Table import Table
from Standard.Table.Data.Aggregate_Column.Aggregate_Column import Count, Sum

from Standard.Test import Bench, Faker

## Bench Utilities ============================================================

num_iterations = 10
seed=1646322139

create_table : Table
create_table num_rows =
    faker = Faker.new seed
    sizes = ['XXS', 'XS', 'S', 'M', 'L', 'XL', 'XXL']
    stores = ["Brixton", "Chelsea", "Fulham", "Mayfair", "Notting Hill", "Peckham", "Richmond", "Westminster", "Whitechapel", "Wimbledon"]
    types = ["Gravel", "Mountain", "Road"]
    vgen v = 0.up_to num_rows . map _-> faker.vector_item v

    size = ["size", vgen sizes]
    store = ["store", vgen stores]
    typ = ["type", vgen types]
    price = ["price", 0.up_to num_rows . map _-> faker.decimal -200.0 200.0]

    Table.new [size, store, typ, price]

# The Benchmarks ==============================================================
collect_benches group_builder num_rows =
        bench_measure ~act name = group_builder.specify name act
        table = create_table num_rows

        measure group_by name_column values=[Count] =
            name = num_rows.to_text + "__" + (group_by.join '_') + "__" + name_column + "_" + (values.map .to_text . join "_")
            bench_measure (table.cross_tab group_by name_column values) name

        measure [] "size"
        measure [] "type"
        measure [] "store"
        measure ["type"] "size"
        measure ["store"] "size"
        measure ["size"] "store"
        measure ["size"] "store" values=[Count, Sum "price"]

bench =
    counts = [[25, 1000], [250, 1000], [2500, 100], [25000, 10]]

    all = Bench.build builder->
        counts.map c->
            num_rows = c.at 0
            iter_size = c.at 1

            group_name = "CrossTab_" + num_rows.to_text + "_" + iter_size.to_text
            options = Bench.options . size iter_size . iter num_iterations
            builder.group group_name options group_builder->
                collect_benches group_builder num_rows

    all . run_main

main = bench

from Standard.Base import all

from Standard.Test import Bench, Faker

check_all text_vector pattern_vector mode =
    text_vector.fold 0 acc-> text->
        pattern_vector.fold acc acc-> pattern->
            result = text.contains pattern mode
            acc + if result then 1 else 0

bench =
    bench_contains suite_prefix character_template =
        faker = Faker.new
        ## Warning: this relies on the fact that Faker will treat the accent
           codepoint `\u{301}` as a separate code unit. We rely on this to add
           accents randomly to neighboring characters. If the implementation of
           Faker is changed, this must be modified accordingly.
        make_alpha_template length = Vector.new length _-> character_template

        big_template = make_alpha_template 10000
        big_random = Vector.new 200 _-> faker.string_value big_template

        Bench.measure (check_all big_random ["AAAAAA"] Case_Sensitivity.Sensitive) suite_prefix+" exact" 10 10
        Bench.measure (check_all big_random ["AAAAAA"] Case_Sensitivity.Insensitive) suite_prefix+" case-insensitive" 10 10

    bench_contains "Text.contains " (Faker.upper_case_letters + Faker.lower_case_letters + 'ąę\u{301}\u{302}\u{303}\u{321}'.char_vector)

main = bench

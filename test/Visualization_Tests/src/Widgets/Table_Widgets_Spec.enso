from Standard.Base import all

import Standard.Base.Metadata.Widget
import Standard.Base.Metadata.Display

from Standard.Table import Table

import Standard.Visualization.Widgets

from Standard.Test import Test, Test_Suite
import Standard.Test.Extensions

spec =
    Test.group "Widgets for In-Memory with column name sets" <|
        mock_table = Table.from_rows ["A", "B C", 'D "E"', "F.G/H\I"] []

        Test.specify "works for `get` and `at`" <|
            expect = [["selector", Widget.Single_Choice ["'A'", "'B C'", '\'D "E"\'', "'F.G/H\\I'"] Nothing Display.Always]] . to_json
            Widgets.get_full_annotations_json mock_table "get" ["selector"] . should_equal expect
            Widgets.get_full_annotations_json mock_table "at" ["selector"] . should_equal expect

        Test.specify "works for `filter`" <|
            expect = [["column", Widget.Single_Choice ["'A'", "'B C'", '\'D "E"\'', "'F.G/H\\I'"] Nothing Display.Always]] . to_json
            Widgets.get_full_annotations_json mock_table "filter" ["column"] . should_equal expect

main = Test_Suite.run_main spec

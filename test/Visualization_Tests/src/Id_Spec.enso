from Standard.Base import all
import Standard.Test
import Standard.Visualization

type My_Type my_field

spec = Test.group "Serializable Visualization Identifiers" <|

    Test.specify "serializes builtin visualizations in the correct format" <|
        json_for_name n = Json.from_pairs [["library", Nothing], ["name", n]]
        Visualization.Id.json.to_json . should_equal (json_for_name "JSON")
        Visualization.Id.scatter_plot.to_json . should_equal (json_for_name "Scatter Plot")
        Visualization.Id.histogram.to_json . should_equal (json_for_name "Histogram")
        Visualization.Id.heatmap.to_json . should_equal (json_for_name "Heatmap")
        Visualization.Id.table.to_json . should_equal (json_for_name "Table")
        Visualization.Id.sql_query.to_json . should_equal (json_for_name "SQL Query")
        Visualization.Id.geo_map.to_json . should_equal (json_for_name "Geo Map")
        Visualization.Id.image.to_json . should_equal (json_for_name "Image")

    Test.specify "serializes library visualizations in the correct format" <|
        expected p_name v_name =
            lib = Json.from_pairs [["name", p_name]]
            Json.from_pairs [["library", lib], ["name", v_name]]
        v_1 = Visualization.Id.from_module Id_Spec "My Vis"
        v_2 = Visualization.Id.from_module Base "Other Vis"
        v_1.to_json.should_equal (expected "enso_dev.Visualization_Tests" "My Vis")
        v_2.to_json.should_equal (expected "Standard.Base" "Other Vis")

    Test.specify "specifies default JSON visualization for any type"
        My_Type 30 . default_visualization . should_equal Visualization.Id.json
        [1,2,3].default_visualization.should_equal Visualization.Id.json
        "foobar".default_visualization.should_equal Visualization.Id.json


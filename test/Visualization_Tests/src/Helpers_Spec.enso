from Standard.Base import all

from Standard.Table import Table

import Standard.Visualization.Helpers

from Standard.Test import Test
import Standard.Test.Extensions

import project.Helpers

spec = 
    Test.group "Table.all_columns" <|
        Test.specify "works with empty table" <|
            table  = Table.from_rows [] []
            table.all_columns.map (_.name) . should_equal []

        Test.specify "works when there is no index set" <|
            header = ['a', 'b']
            row_1  = [11 , 10 ]
            row_2  = [21 , 20 ]
            table  = Table.from_rows header [row_1, row_2]
            table.all_columns.map (_.name) . should_equal ['a','b']

        Test.specify "works when there is nothing but index" <|
            header = ['a']
            row_1  = [11 ]
            row_2  = [21 ]
            table  = Table.from_rows header [row_1, row_2]
            table.all_columns.map (_.name) . should_equal ['a']

        Test.specify "includes the index first and then normal columns" <|
            header = ['a', 'b']
            row_1  = [11 , 10 ]
            row_2  = [21 , 20 ]
            table  = Table.from_rows header [row_1, row_2] . set_index 'a'
            table.all_columns.map (_.name) . should_equal ['a','b']

    Test.group "Table.lookup_ignore_case" <|
        Test.specify "ignores case and takes first matching" <|
            header = ['A', 'a' , 'ω' , 'Ω']
            row_1  = [11 , 10  , 12  , 13]
            row_2  = [21 , 20  , 22  , 23]
            table  = Table.from_rows header [row_1, row_2]
            table.lookup_ignore_case 'a' . expect 'A' [11,21]
            table.lookup_ignore_case 'A' . expect 'A' [11,21]
            table.lookup_ignore_case 'ω' . expect 'ω' [12,22]
            table.lookup_ignore_case 'Ω' . expect 'ω' [12,22]
            table.lookup_ignore_case 'b' . is_error . should_equal True
            table.lookup_ignore_case 'B' . is_error . should_equal True

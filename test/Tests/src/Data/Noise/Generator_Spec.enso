from Standard.Base import all

import Standard.Base.Data.Noise.Deterministic_Random

from Standard.Test import Test, Test_Suite
import Standard.Test.Extensions

spec =
    Test.group "Deterministic Random Noise Generator" <|
        gen = Deterministic_Random
        Test.specify "should always return the same output for the same input" <|
            interval = Interval.new 0 1 Interval_Type.Inclusive
            values = Vector.fill 10000 1 . map (gen.step _ interval)
            values.all (== values.at 0) . should_be_true
        Test.specify "should always produce values within the specified interval" <|
            interval = Interval.new -100 100 Interval_Type.Inclusive
            values = 1.up_to 10000 . to_vector . map (gen.step _ interval)
            values.all (v -> (v >= -100) && (v <= 100)) . should_be_true

main = Test_Suite.run_main spec

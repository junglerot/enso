akka.http.server.idle-timeout = infinite
akka.http.server.remote-address-header = on
akka.http.server.websocket.periodic-keep-alive-max-idle = 1 second
akka.loglevel = "ERROR"
akka.test.timefactor = ${?CI_TEST_TIMEFACTOR}
akka.test.single-expect-default = 5s
akka.actor.default-dispatcher = {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the thread pool
  thread-pool-executor {
    fixed-pool-size = 2
    # Keep alive time for threads
    keep-alive-time = 10s
    # Allow core threads to time out
    allow-core-timeout = off
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 20
}

akka.actor.internal-dispatcher = {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the thread pool
  thread-pool-executor {
    fixed-pool-size = 2
    # Keep alive time for threads
    keep-alive-time = 10s
    # Allow core threads to time out
    allow-core-timeout = off
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 20
}

akka.actor.default-blocking-io-dispatcher = {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the thread pool
  thread-pool-executor {
    fixed-pool-size = 2
    # Keep alive time for threads
    keep-alive-time = 10s
    # Allow core threads to time out
    allow-core-timeout = off
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 20
}



searcher.db.numThreads = 1
searcher.db.properties.journal_mode = "memory"

logging-service {
  logger {
    akka.actor = info
    akka.event = error
    akka.routing = error
    akka.io = error
    akka.stream = error
    slick.jdbc.JdbcBackend.statement = error # log SQL queries on debug level
    slick."*" = error
    org.eclipse.jgit = error
    io.methvin.watcher = error
  }
  appenders = [
    {
      name = "memory"
      forward-to = console
    },
    {
      name = "console"
      pattern = "[%level] [%d{yyyy-MM-ddTHH:mm:ssXXX}] [%logger] %msg%n"
    }
  ]
  default-appender = memory
  log-level = "error"
}

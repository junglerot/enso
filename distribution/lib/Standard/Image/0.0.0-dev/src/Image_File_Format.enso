from Standard.Base import all
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument

import project.Data.Image.Image

## PRIVATE
   List comes from org.opencv.imgcodecs.Imgcodecs#imread doc comment.
supported = [".bmp", ".dib", ".jpeg", ".jpg", ".jpe", ".jp2", ".png", ".webp", ".pbm", ".pgm", ".ppm", ".pxm", ".pnm", ".pfm", ".sr", ".ras", ".tiff", ".tif", ".exr", ".hdr", ".pic"]

## Read the file to a `Image` from a supported file format.
type Image_File_Format
    ## File_Format to read Image files
    For_File

    ## PRIVATE
       If the File_Format supports reading from the file, return a configured instance.
    for_file_read : File -> Image_File_Format | Nothing
    for_file_read file =
        extension = file.extension
        if supported.contains extension then Image_File_Format.For_File else Nothing

    ## PRIVATE
       If this File_Format should be used for writing to that file, return a configured instance.
    for_file_write : File -> Image_File_Format | Nothing
    for_file_write file = Image_File_Format.for_file_read file

    ## PRIVATE
       If the File_Format supports reading from the web response, return a configured instance.
    for_web : Text -> URI -> Image_File_Format | Nothing
    for_web content_type uri =
        ## Currently not loading Image files automatically. This should be supported later.
        _ = [content_type, uri]
        Nothing

    ## PRIVATE
       Implements the `File.read` for this `File_Format`
    read : File -> Problem_Behavior -> Any
    read self file on_problems =
        _ = [on_problems]
        Image.read file

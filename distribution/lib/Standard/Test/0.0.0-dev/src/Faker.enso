from Standard.Base import all

polyglot java import java.util.Random
polyglot java import org.enso.base.Text_Utils

upper_case_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".utf_16
lower_case_letters = "abcdefghijklmnopqrstuvwxyz".utf_16
numbers = "0123456789".utf_16

## Creates a random number generator which can be used for creating test values.

   Arguments:
   - seed: Optional seed value to make the sequence deterministic
make_generator : Integer -> Random
make_generator (seed = 0) =
    if seed == 0 then Random.new else Random.new seed


## Creates a random string based on a template and random number generator.

   Arguments:
   - template: Vector of vectors that represent the possible characters for each
     letter, as UTF-16 code units.
   - generator: Random number generator

   > Examples:
     Creates a fake UK National Insurance number:

            l = "ABCEGHJKLMNOPRSTWXYZ".utf_16
            n = "0123456789".utf_16
            s = "ABCDFMP ".utf_16
            template = [l, l, n, n, n, n, n, s]
            ni_number = make_string template make_generator
make_string : Vector -> Any -> Text
make_string template generator =
    characters = template.map possible_chars->
        selected_char_ix = generator.nextInt possible_chars.length
        possible_chars.at selected_char_ix
    Text.from_utf_16 characters

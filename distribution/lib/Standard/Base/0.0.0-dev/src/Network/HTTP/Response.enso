import project.Any.Any
import project.Data.Boolean.Boolean
import project.Data.Json.JS_Object
import project.Data.Numbers.Integer
import project.Data.Numbers.Number
import project.Data.Text.Encoding.Encoding
import project.Data.Text.Text
import project.Data.Vector.Vector
import project.Error.Error
import project.Network.HTTP.Header.Header
import project.Network.HTTP.HTTP_Status_Code.HTTP_Status_Code
import project.Network.HTTP.Response_Body.Response_Body
import project.Network.HTTP.Response_Body.Unsupported_Content_Type
import project.Network.URI.URI
import project.Nothing.Nothing
import project.System.File_Format.Auto_Detect
import project.System.File_Format.File_Format
from project.Data.Text.Extensions import all
from project.Network.HTTP.Response_Body import decode_format_selector

type Response
    ## PRIVATE

       A type representing an HTTP response.

       Arguments:
       - internal_http_response: The internal representation of the HTTP
         response.
       - body_object: The body of the response. If nothing will be read from the
         internal_http_response. Allows for materialization.
    Value internal_http_response body_object=Nothing

    ## PRIVATE
       Creates a new Response with the body materialized.
    with_materialized_body : Response
    with_materialized_body self =
        Response.Value self.internal_http_response self.body.materialize

    ## GROUP Metadata
       Get the uri for the response.
    uri : URI
    uri self =
        uri_string = self.internal_http_response.uri.toString
        URI.parse uri_string

    ## GROUP Metadata
       Get the response headers.

       It returns a vector of Header objects and not a mapping, because the
       response may contain multiple headers with the same name.

       > Example
         Getting the headers from a response.
         Note: This example will make a network request.

             import Standard.Examples

             example_headers = Examples.get_response.headers

       > Example
         Creating a mapping from the headers, throwing an error if there are duplicates.
         Note: This example will make a network request.

             import Standard.Examples

             example_headers = Map.from_vector error_on_duplicates=True (Examples.get_response.headers.map h-> [h.name, h.value])
    headers : Vector Header
    headers self =
        # This is a mapping that maps a header name to a list of values (since headers may be duplicated).
        multi_map = self.internal_http_response.headers.map
        multi_map.to_vector.flat_map p->
            key = p.first
            values = p.second
            values.map v-> Header.new key v

    ## Get the response content type.
    content_type : Text | Nothing
    content_type self =
        content_type_optional = self.internal_http_response.headers.firstValue "Content-Type"
        if content_type_optional.isPresent then content_type_optional.get else Nothing

    ## GROUP Metadata
       Get the response content length in bytes.
       This method uses the `Content-Length` header, and does not read the body.
       If the header is not present will return Nothing.
    content_length : Integer | Nothing
    content_length self =
        content_length_optional = self.internal_http_response.headers.firstValue "Content-Length"
        if content_length_optional.isPresent.not then Nothing else
            length_text = content_length_optional.get
            Integer.parse length_text

    ## Get the response body.

       > Example
         Getting the body from a response.
         Note: This example will make a network request.

             import Standard.Examples

             example_body = Examples.get_response.body
    body : Response_Body
    body self = self.body_object.if_nothing (Response_Body.new self.internal_http_response.body self.content_type self.uri)

    ## Get the response status code.

       > Example
         Getting the code from a response.
         Note: This example will make a network request.

             import Standard.Examples

             example_code = Examples.get_response.code
    code : HTTP_Status_Code
    code self = HTTP_Status_Code.Value self.internal_http_response.statusCode

    ## ALIAS parse
       GROUP Conversions
       Uses the format to decode the body.
       If using `Auto_Detect`, the content-type will be used to determine the
       format.
    @format decode_format_selector
    decode : File_Format -> Any -> Any
    decode self format=Auto_Detect ~if_unsupported=(Error.throw (Unsupported_Content_Type.Error self.content_type)) =
        self.body.decode format if_unsupported

    ## ALIAS parse as text
       GROUP Conversions
       Decodes the body to a Text value.
    @encoding Encoding.default_widget
    decode_as_text : Encoding -> Text
    decode_as_text self encoding=Encoding.utf_8 =
        self.body.decode_as_text encoding

    ## ALIAS parse as json, parse json
       GROUP Conversions
       Decodes the body as JSON.

       > Example
         Convert a response from JSON.

             import Standard.Examples

             example_to_text = Examples.get_geo_data.decode_as_json
    @encoding Encoding.default_widget
    decode_as_json : Encoding -> JS_Object | Boolean | Number | Nothing | Text | Vector
    decode_as_json self encoding=Encoding.utf_8 =
        self.body.decode_as_json encoding

    ## PRIVATE
       Convert to a JavaScript Object representing this Response.

       > Example
         Convert a response to JS_Object.
         Note: This example will make a network request.

             import Standard.Examples

             example_to_json = Examples.get_response.to_js_object
    to_js_object : JS_Object
    to_js_object self =
        type_pair = ["type", "Response"]
        cons_pair = ["constructor", "Value"]
        JS_Object.from_pairs [type_pair, cons_pair, ["headers", self.headers], ["body", self.body], ["code", self.code]]

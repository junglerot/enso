import project.Any.Any
import project.Data.Interval.Interval
import project.Data.Interval.Interval_Type
import project.Data.Numbers.Number

polyglot java import java.lang.Long
polyglot java import java.util.Random

## A noise generator that implements a seeded deterministic random perturbation
   of the input.

   It produces what is commonly termed "white" noise, where any value in the
   range has an equal chance of occurring.
type Deterministic_Random
    ## GROUP Random
       Step the generator to produce the next value.

       Arguments:
       - input: The seed number to perturb.
       - interval: The interval over which the noise should be generated.

       > Example
         Step the generator with the input 1 and range 0 to 1

             from Standard.Base.Data.Noise.Generator import Deterministic_Random

             example_det_random = Deterministic_Random.step 1 (Interval.new 0 1 Interval_Type.Inclusive)
    step : Number -> Interval -> Number
    step self input interval =
        max_long = Long.MAX_VALUE
        seed = input.floor % max_long
        gen = Random.new seed
        value_range = (interval.end.n - interval.start.n).abs
        offset = (interval.start.n)
        gen.nextDouble
        val = gen.nextDouble
        (val * value_range) + offset

## GROUP Random
   Generate noise based on the input number.

   Arguments:
   - interval: An interval in which the noise should be generated.
   - gen: The generator to use for generating noise.

   The output of the noise generator will depend on the input and the range over
   which the noise is being generated.

   By default, this uses a seeded deterministic generator that will always
   return the same input for the same output. In addition, it will, by default,
   generate values in the exclusive range 0 to 1.

   > Example
     Deterministically perturb the input number 1.
         1.noise
Number.noise : Interval -> Deterministic_Random -> Any
Number.noise self (interval = Interval.new 0 1 Interval_Type.Exclusive) gen=Deterministic_Random =
    gen.step self interval

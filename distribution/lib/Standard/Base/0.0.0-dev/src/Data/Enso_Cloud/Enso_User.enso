import project.Data.Enso_Cloud.Enso_File.Enso_Asset_Type
import project.Data.Enso_Cloud.Enso_File.Enso_File
import project.Data.Enso_Cloud.Utils
import project.Data.Json.JS_Object
import project.Data.Text.Text
import project.Data.Vector.Vector
import project.Error.Error
import project.Errors.Illegal_Argument.Illegal_Argument
import project.Network.HTTP.HTTP
import project.Network.HTTP.HTTP_Method.HTTP_Method
from project.Data.Boolean import Boolean, False, True

type Enso_User
    ## PRIVATE
       Represents a user within Enso Cloud.

       Fields:
       - name: The user's name.
       - email: The user's email address.
       - id: The user's unique ID.
       - home: The user's home directory.
       - is_enabled: Whether the user is enabled.
    User name:Text email:Text id:Text home:Enso_File is_enabled:Boolean=True

    ## Fetch the current user.
    current : Enso_User
    current =
        auth_header = Utils.authorization_header
        user_api = Utils.cloud_root_uri + "users/me"
        response = HTTP.fetch user_api HTTP_Method.Get [auth_header]
        response.if_not_error <|
            js_object = response.decode_as_json
            js_object.into Enso_User

    ## Lists all known users.
    list : Vector Enso_User
    list =
        auth_header = Utils.authorization_header
        user_api = Utils.cloud_root_uri + "users"
        response = HTTP.fetch user_api HTTP_Method.Get [auth_header]
        response.if_not_error <|
            js_object = response.decode_as_json
            users = js_object.get 'users' []
            users.map (user-> user.into Enso_User)

## PRIVATE
Enso_User.from (that:JS_Object) = if ["name", "email", "id"].any (k-> that.contains_key k . not) then Error.throw (Illegal_Argument.Error "Invalid JSON for an Enso_User.") else
    root_folder_id = that.get "rootDirectoryId" ""
    root_folder = Enso_File.Value "" root_folder_id "" Enso_Asset_Type.Directory
    is_enabled = that.get "isEnabled" True
    Enso_User.User (that.get "name") (that.get "email") (that.get "id") root_folder is_enabled

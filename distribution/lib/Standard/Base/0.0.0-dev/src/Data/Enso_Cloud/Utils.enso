import project.Data.Enso_Cloud.Enso_Secret.Enso_Secret
import project.Data.Enso_Cloud.Enso_Secret.Derived_Secret_Value
import project.Data.Pair.Pair
import project.Data.Text.Text
import project.Error.Error
import project.Network.HTTP.Header.Header
import project.Nothing.Nothing
import project.Runtime.Ref.Ref
import project.System.Environment
import project.System.File.File

polyglot java import org.enso.base.enso_cloud.AuthenticationProvider
polyglot java import org.enso.base.enso_cloud.HideableValue

## PRIVATE
cloud_root_uri = "" + AuthenticationProvider.getAPIRootURI

## PRIVATE
   Construct the authorization header for the request
authorization_header : Header
authorization_header =
    token = AuthenticationProvider.getToken.if_nothing <|
        f = credentials_file
        if f.exists.not then Error.throw Not_Logged_In else
            AuthenticationProvider.setToken (f.read_text)
    Header.authorization_bearer token

## PRIVATE
credentials_file : File
credentials_file = case Environment.get "ENSO_CLOUD_CREDENTIALS_FILE" of
    Nothing -> File.home / ".enso" / "credentials"
    path -> File.new path

## PRIVATE
   Root address for listing folders
directory_api = cloud_root_uri + "directories"

## PRIVATE
   Root address for listing folders
files_api = cloud_root_uri + "files"

## PRIVATE
   Root address for listing folders
projects_api = cloud_root_uri + "projects"

## PRIVATE
   Root address for Secrets API
secrets_api = cloud_root_uri + "secrets"

## PRIVATE
   Error if the user is not logged into Enso Cloud.
type Not_Logged_In
    ## PRIVATE
    to_display_text : Text
    to_display_text self = "Not logged into Enso cloud. Please log in and restart."

## PRIVATE
as_hideable_value : Text | Enso_Secret | Nothing -> HideableValue
as_hideable_value (value : Text | Enso_Secret | Derived_Secret_Value) = case value of
    text : Text -> HideableValue.PlainValue.new text
    secret : Enso_Secret -> HideableValue.SecretValue.new secret.id
    Derived_Secret_Value.Plain_Text text -> as_hideable_value text
    Derived_Secret_Value.Secret_Value secret -> as_hideable_value secret
    Derived_Secret_Value.Concat left right -> HideableValue.ConcatValues.new (as_hideable_value left) (as_hideable_value right)
    Derived_Secret_Value.Base_64_Encode inner -> HideableValue.Base64EncodeValue.new (as_hideable_value inner)

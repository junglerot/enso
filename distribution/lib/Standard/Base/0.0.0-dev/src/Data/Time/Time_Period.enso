import project.Data.Time.Time_Of_Day.Time_Of_Day
import project.Data.Time.Date_Time.Date_Time
import project.Data.Time.Duration.Duration
from project.Data.Boolean import Boolean, True, False

polyglot java import org.enso.base.Time_Utils
polyglot java import java.time.temporal.ChronoUnit
polyglot java import java.time.temporal.TemporalUnit

## Represents a unit of time of a day or shorter.
type Time_Period
    Day

    Hour

    Minute

    Second

    ## PRIVATE
    to_java_unit : TemporalUnit
    to_java_unit self = case self of
        Time_Period.Day -> ChronoUnit.DAYS
        Time_Period.Hour -> ChronoUnit.HOURS
        Time_Period.Minute -> ChronoUnit.MINUTES
        Time_Period.Second -> ChronoUnit.SECONDS

    ## PRIVATE
    adjust_start : (Time_Of_Day | Date_Time) -> (Time_Of_Day | Date_Time)
    adjust_start self date =
        (Time_Utils.utils_for date).start_of_time_period date self.to_java_unit

    ## PRIVATE
    adjust_end : (Time_Of_Day | Date_Time) -> (Time_Of_Day | Date_Time)
    adjust_end self date =
        (Time_Utils.utils_for date).end_of_time_period date self.to_java_unit

    ## PRIVATE
    to_duration : Duration
    to_duration self = case self of
        Time_Period.Day -> Duration.new 24
        Time_Period.Hour -> Duration.new 1
        Time_Period.Minute -> Duration.new 0 1
        Time_Period.Second -> Duration.new 0 0 1

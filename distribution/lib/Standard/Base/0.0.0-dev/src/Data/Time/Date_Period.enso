import project.Data.Time.Date.Date
import project.Data.Time.Period.Period
import project.Data.Time.Date_Time.Date_Time
import project.Data.Time.Day_Of_Week.Day_Of_Week
from project.Data.Boolean import Boolean, True, False

polyglot java import org.enso.base.Time_Utils
polyglot java import org.enso.base.time.Date_Period_Utils
polyglot java import java.time.temporal.TemporalAdjuster
polyglot java import java.time.temporal.TemporalAdjusters

## Represents a unit of time longer on the scale of days (longer than a day).
type Date_Period
    Year

    Quarter

    Month

    ## Represents a 7-day week starting at a given day.

       By default, the first day of the week is Monday, but this can be adjusted
       to any other day.
    Week (first_day:Day_Of_Week = Day_Of_Week.Monday)

    Day

    ## PRIVATE
       This method could be replaced with matching on `Date_Period` supertype
       if/when that is supported.
    is_date_period : Boolean
    is_date_period self = True

    ## PRIVATE
    adjust_start : (Date | Date_Time) -> (Date | Date_Time)
    adjust_start self date =
        adjuster = case self of
            Date_Period.Year -> TemporalAdjusters.firstDayOfYear
            Date_Period.Quarter -> Date_Period_Utils.quarter_start
            Date_Period.Month -> TemporalAdjusters.firstDayOfMonth
            Date_Period.Week first_day -> TemporalAdjusters.previousOrSame first_day.to_java
            Date_Period.Day -> Date_Period_Utils.day_start
        (Time_Utils.utils_for date).apply_adjuster date adjuster

    ## PRIVATE
    adjust_end : (Date | Date_Time) -> (Date | Date_Time)
    adjust_end self date = if self == Date_Period.Day then date else
        adjuster = case self of
            Date_Period.Year -> TemporalAdjusters.lastDayOfYear
            Date_Period.Quarter -> Date_Period_Utils.quarter_end
            Date_Period.Month -> TemporalAdjusters.lastDayOfMonth
            Date_Period.Week first_day -> Date_Period_Utils.end_of_week first_day.to_java
            Date_Period.Day -> Date_Period_Utils.day_end
        (Time_Utils.utils_for date).apply_adjuster date adjuster

    ## PRIVATE
    to_period : Period
    to_period self = case self of
        Date_Period.Year -> Period.new years=1
        Date_Period.Quarter -> Period.new months=3
        Date_Period.Month -> Period.new months=1
        Date_Period.Week _ -> Period.new days=7
        Date_Period.Day -> Period.new days=1

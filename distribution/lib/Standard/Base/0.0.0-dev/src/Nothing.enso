import project.Any.Any
import project.Data.Numbers.Integer
import project.Data.Text.Text
from project.Data.Boolean import Boolean, False, True

## The type that has only a singleton value. Nothing in Enso is used as an
   universal value to indicate the lack of presence of a value.

   It is often used alongside a value of type a to provide a Maybe or
   Option abstraction.
@Builtin_Type
type Nothing
    ## GROUP Logical
       Checks if the type is an instance of `Nothing`.

       > Example
         Checking if the value 1 is nothing.

             1.is_nothing
    is_nothing : Boolean
    is_nothing self = True

    ## GROUP Logical
       If this is Nothing then returns `function`.

       > Example
         If the value "Hello" is nothing return "".

             "Hello".if_nothing ""
    if_nothing : Any -> Any
    if_nothing self ~function = function

    ## Get a value for the key of the object.
       As `Nothing` has no keys, returns `if_missing`.

       Arguments:
       - key: The key to get.
       - if_missing: The value to return if the key is not found.
    get : Text | Integer -> Any -> Nothing
    get self key ~if_missing=Nothing =
        _ = key
        if_missing

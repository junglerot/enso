polyglot java import java.nio.file.StandardOpenOption

## Represents different options for opening file streams.

   This is intended for more advanced users, wishing to obtain lower-level
   file access. For most use cases, the default values used in the methods of
   the `File` type should be preferred.
type File_Access

    ## If the file is opened for `Write` access then bytes will be written to
       the end of the file rather than the beginning.
    Append

    ## Create a new file if it does not exist.
    Create

    ## Create a new file, failing if the file already exists.
    Create_New

    ## Delete the underlying file on closing the stream.
    Delete_On_Close

    ## Requires that every update to the file's content be written
       synchronously to the underlying storage device.
    Dsync

    ## Open for read access.
    Read

    ## Sparse file.
    Sparse

    ## Requires that every update to the file's content or metadata be written
       synchronously to the underlying storage device.
    Sync

    ## If the file already exists and is opened for `Write` access,
       the original contents will be removed.
    Truncate_Existing

    ## Open file for write access.
    Write

    ## PRIVATE

       Convert this object into a representation understandable by the JVM.
    to_java : StandardOpenOption
    to_java self = case self of
        File_Access.Append            -> StandardOpenOption.APPEND
        File_Access.Create            -> StandardOpenOption.CREATE
        File_Access.Create_New        -> StandardOpenOption.CREATE_NEW
        File_Access.Delete_On_Close   -> StandardOpenOption.DELETE_ON_CLOSE
        File_Access.Dsync             -> StandardOpenOption.DSYNC
        File_Access.Read              -> StandardOpenOption.READ
        File_Access.Sparse            -> StandardOpenOption.SPARSE
        File_Access.Sync              -> StandardOpenOption.SYNC
        File_Access.Truncate_Existing -> StandardOpenOption.TRUNCATE_EXISTING
        File_Access.Write             -> StandardOpenOption.WRITE

from Standard.Base import all

import project.Data.Type.Storage
import project.Data.Type.Value_Type.Bits
import project.Data.Type.Value_Type.Value_Type

polyglot java import org.enso.table.data.column.builder.BoolBuilder
polyglot java import org.enso.table.data.column.builder.DateBuilder
polyglot java import org.enso.table.data.column.builder.DateTimeBuilder
polyglot java import org.enso.table.data.column.builder.InferredBuilder
polyglot java import org.enso.table.data.column.builder.NumericBuilder
polyglot java import org.enso.table.data.column.builder.StringBuilder
polyglot java import org.enso.table.data.column.builder.TimeOfDayBuilder
polyglot java import org.enso.table.data.column.storage.Storage as Java_Storage

## PRIVATE
make_bool_builder : BoolBuilder
make_bool_builder = BoolBuilder.new

## PRIVATE
make_double_builder : Integer -> NumericBuilder
make_double_builder initial_size = NumericBuilder.createDoubleBuilder initial_size

## PRIVATE
make_long_builder : Integer -> NumericBuilder
make_long_builder initial_size bits=Bits.Bits_64 =
    integer_type = Storage.from_value_type_strict (Value_Type.Integer bits)
    NumericBuilder.createLongBuilder initial_size integer_type

## PRIVATE
make_string_builder : Integer -> Value_Type -> StringBuilder
make_string_builder initial_size value_type=Value_Type.Char =
    storage_type = Storage.from_value_type_strict value_type
    StringBuilder.new initial_size storage_type

## PRIVATE
make_time_of_day_builder : Integer -> TimeOfDayBuilder
make_time_of_day_builder initial_size = TimeOfDayBuilder.new initial_size

## PRIVATE
make_date_time_builder : Integer -> DateTimeBuilder
make_date_time_builder initial_size = DateTimeBuilder.new initial_size

## PRIVATE
make_date_builder : Integer -> DateBuilder
make_date_builder initial_size = DateBuilder.new initial_size

## PRIVATE
make_inferred_builder : Integer -> InferredBuilder
make_inferred_builder initial_size = InferredBuilder.new initial_size

## PRIVATE
   Wrapper around a DateBuilder that uses DateBuilder.appendDate() to append a
   value (instead of builder.append())
type DateBuilderAdapter
    Value (date_builder : DateBuilder)

    ## PRIVATE
    append : Date -> Nothing
    append self date =
        self.date_builder.appendDate date

    ## PRIVATE
    seal : Java_Storage
    seal self = self.date_builder.seal

## PRIVATE
   DateBuilderAdapter constructor that matches the interface of the other
   make_*_builder functions.
make_date_builder_adapter : Integer -> DateBuilderAdapter
make_date_builder_adapter n = DateBuilderAdapter.Value (make_date_builder n)

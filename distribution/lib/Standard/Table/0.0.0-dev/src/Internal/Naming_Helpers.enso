from Standard.Base import all
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument

polyglot java import org.enso.table.data.table.Column as Java_Column

## PRIVATE
   An utility module for validating and generating column names.
type Naming_Helpers
    ## PRIVATE
       Checks if the name is valid and runs the action, otherwise raises an error.
    ensure_name_is_valid name ~action =
        checked = Illegal_Argument.handle_java_exception <|
            Java_Column.ensureNameIsValid name
        checked.if_not_error action

    ## PRIVATE
       Ensures that the name does not contain the null character.
    sanitize_name : Text -> Text
    sanitize_name name =
        # Using the regex matcher due to the #5831 bug.
        name.replace '\0' '\\\\0' matcher=Regex_Matcher.Value

    ## PRIVATE
       Generates a column name for a binary operation.
    binary_operation_name : Text -> Any -> Any -> Text
    binary_operation_name operation_name left right =
        lhs = Naming_Helpers.to_expression_text left
        rhs = Naming_Helpers.to_expression_text right
        lhs + " " + operation_name + " " + rhs

    ## PRIVATE
       Generates a column name for a function-like transformation.
    function_name : Text -> Vector Any -> Text
    function_name function_name arguments =
        function_name + "(" + (arguments.map Naming_Helpers.to_expression_text . join ", ") + ")"

    ## PRIVATE
       Serializes a given object into an expression-like text approximation.

       For columns, it will return its name wrapped in `[` and `]`, with the `]`
       symbols in the name escaped as `]]`, according to the expression rules.
       For other objects, it will return its pretty-printed representation.
    to_expression_text value =
        if is_column value then "[" + value.name.replace "]" "]]" + "]" else
            value.pretty

## PRIVATE
   Checks if the value is a column of any backend.
is_column value =
    case Meta.get_qualified_type_name value of
        Nothing -> False
        typename : Text -> typename.ends_with ".Column"

from Standard.Base import all

from Standard.Table import Column, Table

## Compute the linear regression between the x and y coordinates, returning a
   vector containing the slope in the first position and the bias in the second.

   Arguments:
   - x_column: The name of the column in `self` containing the x values.
   - y_column: The name of the column in `self` containing the y values.

   If the columns don't match in length, it throws a `Fit_Error`.

   > Example
     Compute the linear regression between two columns in a table.

         from Standard.Table import all

         example_linear_regression =
             column_x = Column.from_vector "x" [1, 2, 3, 4, 5]
             column_y = Column.from_vector "y" [2, 4, 6, 8, 10]
             table = Table.new [column_x, column_y]
             table.linear_regression "x" "y"
Table.Table.linear_regression : Text -> Text -> Vector Number ! Fit_Error
Table.Table.linear_regression x_column y_column =
    x_values = self.at x_column
    y_values = self.at y_column
    here.linear_regression x_values y_values

## Compute the linear regression between the x and y coordinates, returning a
   vector containing the slope in the first position and the bias in the second.

   Arguments:
   - x_values: The column of x coordinate values for each coordinate pair.
   - y_values: The column of y coordinate values for each coordinate pair.

   If the columns don't match in length, it throws a `Fit_Error`.

   > Example
     Compute the linear regression between two columns.

         from Standard.Table import all

         example_linear_regression =
             column_x = Column.from_vector "x" [1, 2, 3, 4, 5]
             column_y = Column.from_vector "y" [2, 4, 6, 8, 10]
             Model.linear_regression column_x column_y
linear_regression : Column -> Column -> Vector Number ! Fit_Error
linear_regression x_values y_values =
    if x_values.length != y_values.length then Error.throw (Fit_Error "Columns have different lengths.") else
        n = x_values.length
        x_squared = x_values.map (^2)
        x_y = x_values * y_values

        slope_numerator = (n * x_y.sum) - (x_values.sum * y_values.sum)
        slope_denominator = (n * x_squared.sum) - (x_values.sum ^ 2)
        slope = slope_numerator / slope_denominator

        bias_numerator = y_values.sum - (slope * x_values.sum)
        bias = bias_numerator / n

        [slope, bias]

## PRIVATE

   An error thrown when the linear regression cannot be computed.

   Arguments:
   - message: The error message.
type Fit_Error message

## PRIVATE

   Converts the `Fit_Error` to a human-readable representation.
Fit_Error.to_display_text : Text
Fit_Error.to_display_text = "Could not fit the model: " + self.message.to_text


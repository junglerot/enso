from Standard.Base import all

## Specifies a selection of columns from the table and the new name for them to
   become.
type Column_Name_Mapping

    ## Selects columns based on their names.

       The `matcher` can be used to specify if the names should be matched
       exactly or should be treated as regular expressions. It also allows to
       specify if the matching should be case-sensitive.
    By_Name (names : Map Text Text) (matcher : Matcher = Text_Matcher.Case_Sensitive)

    ## Selects columns by their index.

       The index of the first column in the table is 0. If the provided index is
       negative, it counts from the end of the table (e.g. -1 refers to the last
       column in the table).
    By_Index (indexes : Map Number Text)

    ## Selects columns having exactly the same names as the columns provided in
       the input.

       The input columns do not necessarily have to come from the same table, so
       this approach can be used to match columns with the same names as a set
       of columns of some other table, for example, when preparing for a join.

       The Vector should be of the form [[Column, Name], [Column1, Name1], ...]
    By_Column (columns : Vector)

    ## Selects columns by position starting at the first column until the
       new_names is exhausted.
    By_Position (new_names : [Text])

from Standard.Base import all

type Join_Condition
    ## Correlates rows from the two tables if the `left` element is equal to the
       `right` element.

       `Nothing` (or null in database) is considered equal to itself.

       Arguments:
        - left: A name or index of a column in the left table.
        - right: A name or index of a column in the right table.
    Equals (left : Text | Integer) (right : Text | Integer = left)

    ## Correlates rows from the two tables if the `left` element is equal to the
       `right` element, ignoring case. This is only supported for text columns.

       Case insensitive comparisons may mean a database has to perform a row
       scan, which can cause a performance degradation.

       `Nothing` (or null in database) is considered equal to itself.

       Arguments:
        - left: A name or index of a column in the left table.
        - right: A name or index of a column in the right table.
        - locale: The locale to use for case insensitive comparisons.
    @locale Locale.default_widget
    Equals_Ignore_Case (left : Text | Integer) (right : Text | Integer = left) (locale : Locale = Locale.default)

    ## Correlates rows from the two tables if the `left` element fits between
       the `right_lower` and `right_upper` elements. The comparison is inclusive
       for both lower and upper bounds.

       If any of the values on row are `Nothing` (or null in database) then the
       rows won't be joined.

       Arguments:
        - left: A name or index of a column in the left table.
        - right_lower: A name or index of a column in the right table, used as
          the lower bound for the check.
        - right_upper: A name or index of a column in the right table, used as
          the upper bound for the check.
    Between (left : Text | Integer) (right_lower : Text | Integer) (right_upper : Text | Integer)

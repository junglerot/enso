from Standard.Base import all

## One or more columns not found in the input table.
   Can occur when using By_Name or By_Column.
type Missing_Input_Columns (criteria : [Text])

Missing_Input_Columns.to_display_text : Text
Missing_Input_Columns.to_display_text =
    "The criteria "+self.criteria.to_text+" did not match any columns."

## One or more column indexes were invalid on the input table.
   Can occur when using By_Index.
type Column_Indexes_Out_Of_Range (indexes : [Integer])

Column_Indexes_Out_Of_Range.to_display_text : Text
Column_Indexes_Out_Of_Range.to_display_text = case self.indexes.length == 1 of
    True -> "The index " + (self.indexes.at 0).to_text + " is out of range."
    False -> "The indexes "+self.indexes.short_display_text+" are out of range."

## More names than the column count provided to the function.
   Can occur when using By_Position.
type Too_Many_Column_Names_Provided (column_names : [Text])

Too_Many_Column_Names_Provided.to_display_text : Text
Too_Many_Column_Names_Provided.to_display_text =
    "Too many column names provided. " + (self.column_names.at 0).to_text + " unused."

## One or more column names were invalid during a rename operation.
type Invalid_Output_Column_Names (column_names : [Text])

Invalid_Output_Column_Names.to_display_text : Text
Invalid_Output_Column_Names.to_display_text = case self.column_names.length == 1 of
    True -> "The name " + (self.column_names.at 0).to_text + " is invalid."
    False -> "The names "+self.column_names.short_display_text+" are invalid."

## One or more column names clashed during a rename operation.
type Duplicate_Output_Column_Names (column_names : [Text])

Duplicate_Output_Column_Names.to_display_text : Text
Duplicate_Output_Column_Names.to_display_text = case self.column_names.length == 1 of
    True -> "The name " + (self.column_names.at 0).to_text + " was repeated in the output, so was renamed."
    False -> "The names "+self.column_names.short_display_text+" were repeated in the output, and were renamed."

## No columns in the output result.
type No_Output_Columns

No_Output_Columns.to_display_text : Text
No_Output_Columns.to_display_text =
    "The result contains no columns."

## Indicates that the provided Column_Selector has duplicate entries.
type Duplicate_Column_Selectors (duplicate_selectors : [(Text | Integer)])

Duplicate_Column_Selectors.to_display_text : Text
Duplicate_Column_Selectors.to_display_text =
    "The provided Column_Selector has duplicate entries: "+self.duplicate_selectors.short_display_text+"."

## Indicates that one column has been matched by multiple selectors.

   In case the selectors have differing metadata and the error does not prevent
   the operation from continuing, the first selector on the list is used.
type Column_Matched_By_Multiple_Selectors (column_name : Text) (selectors : [Any])

Column_Matched_By_Multiple_Selectors.to_display_text : Text
Column_Matched_By_Multiple_Selectors.to_display_text =
    'The column "' + self.column_name + '" is matched by multiple selectors: ' + self.selectors.short_display_text + "."

## Indicates that the provided indices matched columns already matched by
   others, so they do not introduce any new columns to the input.

  For example, if the table has only one column, then selecting
  `By_Index [0, -1]` will only yield this single column and
  `Input_Indices_Already_Matched [-1]` will be raised.
type Input_Indices_Already_Matched (indices : [Integer])

Input_Indices_Already_Matched.to_display_text : Text
Input_Indices_Already_Matched.to_display_text =
    "The indices "+self.indices.short_display_text+" matched columns which have been matched earlier by other indices, so they did not introduce any new columns into the result."

## Indicates that no input columns were selected for the operation, so the
   operation will cause no effect.
type No_Input_Columns_Selected

No_Input_Columns_Selected.to_display_text : Text
No_Input_Columns_Selected.to_display_text =
    "No input columns have been selected for the operation."


## Indicates that an aggregation calculation could not be completed.
type Invalid_Aggregation (column:Text) (rows:[Integer]) (message:Text)

Invalid_Aggregation.to_display_text : Text
Invalid_Aggregation.to_display_text =
    "The "+self.column+" could not be calculated at "+self.row.to_text+" : "+self.message

## Indicates that a floating point number was used in a grouping.
type Floating_Point_Grouping (column:Text) (rows:[Integer])

Floating_Point_Grouping.to_display_text : Text
Floating_Point_Grouping.to_display_text =
    "Grouping on floating points is not recommended within "+self.column+" at row "+self.row.to_text+"."

## Indicates that a text value with a delimiter was included in a concatenation without any quote character
type Unquoted_Delimiter (column:Text) (rows:[Integer])

Unquoted_Delimiter.to_display_text : Text
Unquoted_Delimiter.to_display_text =
    "The "+self.column+" at row "+self.row.to_text+" contains the delimiter and there is no specified quote character."

## Warning when additional warnings occurred.
type Additional_Warnings (count:Integer)

Additional_Warnings.to_display_text : Text
Additional_Warnings.to_display_text =
    "There were "+self.count.to_text+" additional issues."

## Indicates that when loading a delimited file, a row was encountered which had
   too many or too few columns.

   Only the first 10 rows are reported, any additional ones are aggregated into
   a single instance of `Additional_Invalid_Rows`.
type Invalid_Row (source_file_line_number : Integer) (index : Integer | Nothing) (row : [Text])

## Indicates how many additional `Invalid_Row` warnings have been suppressed.
type Additional_Invalid_Rows (count : Integer)

## Indicates that a quote inside of a delimited file cell has been opened but
   never closed.
type Mismatched_Quote

## Indicates an unexpected parser error.
type Parser_Error cause

## Indicates that a specified location was not valid.
type Invalid_Location (location:Text)

Invalid_Location.to_display_text : Text
Invalid_Location.to_display_text =
    "The location '"+self.location+"' is not valid."

## Indicates that some values did not match the expected datatype format.
type Invalid_Format column:Text (datatype:(Integer|Number|Date|Time|Time_Of_Day|Boolean)) (cells:[Text])

Invalid_Format.to_display_text : Text
Invalid_Format.to_display_text =
    self.cells.length+" cells in column "+self.column+" had invalid format for datatype "+self.datatype.to_text+"."

## Indicates that some values contained leading zeros even though these were not allowed.
type Leading_Zeros column:Text (datatype:(Integer|Number|Date|Time|Time_Of_Day|Boolean)) (cells:[Text])

## Indicates that multiple `Column_Type_Selector` match the same column.

   If all matching selectors indicate the same type, the warning is reported but
   a parse is attempted anyway. If mixed types are requested, the column is not
   parsed due to ambiguity.
type Duplicate_Type_Selector column:Text ambiguous:Boolean

## Indicates that the given file type is not supported by the `Auto` format.
type Unsupported_File_Type filename

Unsupported_File_Type.to_display_text : Text
Unsupported_File_Type.to_display_text =
    "The "+self.filename+" has a type that is not supported by the Auto format."

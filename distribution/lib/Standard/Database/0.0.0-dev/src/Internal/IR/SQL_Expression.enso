from Standard.Base import all

import project.Data.SQL_Type.SQL_Type

## PRIVATE

   The internal representation of an SQL expression which can be a column
   reference, an interpolated constant or an operation that combines other
   expressions.
type SQL_Expression
    ## PRIVATE

       The internal representation of an SQL expression that gets a value from a
       column.

       Arguments:
       - origin: the name of the entity (table or sub-query) that this column
         originates from, it corresponds to the `alias` field in `from_spec`.
       - name: the name of the column directly in the table or its alias in a
         sub-query.
    Column (origin : Text) (name : Text)

    ## PRIVATE

       The internal representation of an SQL expression which is a constant to
       be interpolated when building the query.

       Arguments:
       - value: the value to be interpolated; the set of supported interpolation
         values depends on the database backend.
    Constant (value : Any)

    ## PRIVATE

       The internal representation of an SQL literal that should be inserted
       as-is into a query.
    Literal (value : Text)

    ## PRIVATE

       The internal representation of an SQL expression built from an operation
       and sub-expressions.

       Arguments:
       - kind: the name of the operation, these can be both functions or infix
         operators, the actual implementation is determined by a specific
         dialect.
       - expressions: a list of expressions which are arguments to the operation
         different operations support different amounts of arguments.
       - metadata: additional metadata tied to the operation. This will be
         `Nothing` for most operations, but some operations that need to be
         parametrized by additional settings can use this field to pass that
         information to the code generator.
    Operation (kind : Text) (expressions : Vector SQL_Expression) (metadata : Any | Nothing = Nothing)

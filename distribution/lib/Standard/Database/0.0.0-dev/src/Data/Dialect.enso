from Standard.Base import all

import Standard.Base.Error.Common as Errors
import Standard.Table.Data.Aggregate_Column
import Standard.Database.Data.Sql
import Standard.Database.Data.Internal.IR
import Standard.Database.Data.Dialect.Postgres
import Standard.Database.Data.Dialect.Redshift
import Standard.Database.Data.Dialect.SQLite

## PRIVATE

   Represents a specific SQL dialect.

   It encapsulates dialect-specific code generation details allowing us to
   support differing SQL dialects.
type Dialect
    ## PRIVATE
       This is a fake constructor to make the compiler accept this type
       definition. It can and should be removed once interface definitions are
       allowed.
    Dialect_Data
    ## PRIVATE
       Name of the dialect.
    name : Text
    name self = Errors.unimplemented "This is an interface only."


    ## PRIVATE
       A function which generates SQL code from the internal representation
       according to the specific dialect.
    generate_sql : Query -> Sql.Statement
    generate_sql self = Errors.unimplemented "This is an interface only."

    ## PRIVATE
       Deduces the result type for an aggregation operation.

       The provided aggregate is assumed to contain only already resolved columns.
       You may need to transform it with `resolve_aggregate` first.
    resolve_target_sql_type : Aggregate_Column -> Sql_Type
    resolve_target_sql_type self = Errors.unimplemented "This is an interface only."

    ## PRIVATE
       Prepares an ordering descriptor.

       One of the purposes of this method is to verify if the expected ordering
       settings are supported by the given database backend.
    prepare_order_descriptor : IR.Internal_Column -> Sort_Direction -> Text_Ordering -> IR.Order_Descriptor
    prepare_order_descriptor self = Errors.unimplemented "This is an interface only."

## PRIVATE

   The dialect of SQLite databases.
sqlite : Dialect
sqlite = SQLite.sqlite

## PRIVATE

   The dialect of PostgreSQL databases.
postgres : Dialect
postgres = Postgres.postgres

## PRIVATE

   The dialect of Redshift databases.
redshift : Dialect
redshift = Redshift.redshift



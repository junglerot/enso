from Standard.Base import all

import Standard.Database.Data.SQL_Type.SQL_Type
import Standard.Database.Data.Table.Table

import project.Helpers

## PRIVATE

   Prepares the database table for visualization.

   Arguments:
   - x: The database table to prepare for visualization.

   For each interpolation it provides its value, its actual type name, its
   expected SQL type name and if it was possible to infer it, its expected Enso
   typename.

   Expected Enso types are inferred based on known SQL types and their mapping
   to Enso types.
prepare_visualization : Table -> Text
prepare_visualization x =
    prepared = x.to_sql.prepare
    code = prepared.first
    interpolations = prepared.second
    mapped = interpolations.map value->
        enso_type = Meta.get_qualified_type_name value
        JS_Object.from_pairs [["value", value], ["enso_type", enso_type]]
    dialect = x.connection.dialect.name
    JS_Object.from_pairs [["dialect", dialect], ["code", code], ["interpolations", mapped]] . to_text

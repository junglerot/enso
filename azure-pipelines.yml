# https://aka.ms/yaml

trigger:
  branches:
    include: [ "*" ]
  paths:
    exclude:
      - .github/*
      - doc/*
      - .gitignore
      - .scalafmt.conf
      - CODE_OF_CONDUCT.md
      - CONTRIBUTING.md
      - LICENSE
      - README.md

pr: none

variables:
  graalVersion: 19.2.0
  historicMacOSSbtFormula: https://raw.githubusercontent.com/Homebrew/homebrew-core/5311047af872538de3bd9fa10d78eda3185a7559/Formula/sbt.rb

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu-16.04'
  container:
    image: oracle/graalvm-ce:$(graalVersion)
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"
  steps:
  - script: /tmp/docker exec -t -u 0 ci-container sh -c "yum install -y sudo"
    displayName: Setup sudo
  - script: |
      curl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo
      sudo yum install -y sbt
    displayName: "Install sbt"
  - script: |
      sbt -no-colors test
    displayName: sbt test
    continueOnError: true
  - script: |
      sbt -no-colors bench
    displayName: sbt bench
    continueOnError: true
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
  - script: |
      echo "##vso[task.complete result=Failed;]DONE"
    condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')
    displayName: "Fail if there were issues"
- job: macOS
  pool:
    vmImage: macOS-10.13
  steps:
  - script: |
      curl -fSL -o graal.tar.gz https://github.com/oracle/graal/releases/download/vm-$(graalVersion)/graalvm-ce-darwin-amd64-$(graalVersion).tar.gz
      tar -x -z -C ~ -f graal.tar.gz
      ls ~/graalvm-ce-$(graalVersion)
      sudo mv ~/graalvm-ce-$(graalVersion) /Library/Java/JavaVirtualMachines
      echo "##vso[task.setvariable variable=JAVA_HOME]/Library/Java/JavaVirtualMachines/graalvm-ce-$(graalVersion)/Contents/Home"
      echo "##vso[task.setvariable variable=PATH]/Library/Java/JavaVirtualMachines/graalvm-ce-$(graalVersion)/Contents/Home/bin:$PATH"
    displayName: Install GraalVM
  - script: |
      brew update
      brew install $(historicMacOSSbtFormula)
    displayName: Install sbt
  - script: |
      sbt -no-colors test
    displayName: sbt test
    continueOnError: true
  - script: |
      sbt -no-colors bench
    displayName: sbt bench
    continueOnError: true
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
  - script: |
      echo "##vso[task.complete result=Failed;]DONE"
    condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')
    displayName: "Fail if there were issues"
- job: Windows
  pool:
    vmImage: windows-2019
  steps:
  - script: |
      curl -fSL -o graal.zip https://github.com/oracle/graal/releases/download/vm-$(graalVersion)/graalvm-ce-windows-amd64-$(graalVersion).zip
      7z x -y -oC:\ graal.zip
    displayName: "Install GraalVM"
  - script: |
      choco install -y sbt
    displayName: "Install sbt"
  - script: |
        call refreshenv
        echo ##vso[task.setvariable variable=JAVA_HOME]C:\graalvm-ce-$(graalVersion)
        echo ##vso[task.setvariable variable=PATH]C:\graalvm-ce-$(graalVersion)\bin;%PATH%
    displayName: "Adjust environment variables"
  - script: |
      sbt test
    continueOnError: true
    displayName: "sbt test"
  - script: |
      sbt bench
    continueOnError: true
    displayName: "sbt bench"
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
  - script: |
      echo "##vso[task.complete result=Failed;]DONE"
    condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')
    displayName: "Fail if there were issues"

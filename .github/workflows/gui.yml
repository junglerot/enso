---
name: GUI CI
"on":
  push:
    branches:
      - develop
      - unstable
      - stable
  pull_request: {}
  workflow_dispatch: {}
jobs:
  ide-ci-actions-workflow-definition-job-assert-changelog-linux:
    name: Assert if CHANGELOG.md was updated (on pull request)
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - id: changed_files
        run: "git fetch\nlist=`git diff --name-only origin/develop HEAD | tr '\\n' ' '`\necho $list\necho \"::set-output name=list::'$list'\""
      - run: "if [[ ${{ contains(steps.changed_files.outputs.list,'CHANGELOG.md') || contains(github.event.head_commit.message,'[ci no changelog needed]') || contains(github.event.pull_request.body,'[ci no changelog needed]') || github.event.pull_request.user.login == 'dependabot' }} == false ]]; then exit 1; fi"
        if: "github.base_ref == 'develop' || github.base_ref == 'unstable' || github.base_ref == 'stable'"
  ide-ci-actions-workflow-definition-job-build-project-manager-linux:
    name: Build Project Manager (linux)
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run backend get"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run backend get"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-build-project-manager-macos:
    name: Build Project Manager (macos)
    runs-on:
      - macos-latest
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run backend get"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run backend get"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-build-project-manager-windows:
    name: Build Project Manager (windows)
    runs-on:
      - self-hosted
      - Windows
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run backend get"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run backend get"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-build-wasm-linux:
    name: Build GUI (WASM) (linux)
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run wasm build"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run wasm build"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-build-wasm-macos:
    name: Build GUI (WASM) (macos)
    runs-on:
      - macos-latest
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run wasm build"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run wasm build"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-build-wasm-windows:
    name: Build GUI (WASM) (windows)
    runs-on:
      - self-hosted
      - Windows
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run wasm build"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run wasm build"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-cancel-workflow-linux:
    name: Cancel Previous Runs
    runs-on:
      - X64
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: "${{ github.token }}"
  ide-ci-actions-workflow-definition-job-integration-test-linux:
    name: IDE integration tests (linux)
    needs:
      - ide-ci-actions-workflow-definition-job-build-project-manager-linux
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run ide integration-test --backend-source current-ci-run"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run ide integration-test --backend-source current-ci-run"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-lint-linux:
    name: Lint (linux)
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run lint"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run lint"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-native-test-linux:
    name: Native GUI tests (linux)
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run wasm test --no-wasm"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run wasm test --no-wasm"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-package-ide-linux:
    name: Package IDE (linux)
    needs:
      - ide-ci-actions-workflow-definition-job-build-project-manager-linux
      - ide-ci-actions-workflow-definition-job-build-wasm-linux
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run ide build --wasm-source current-ci-run --backend-source current-ci-run"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run ide build --wasm-source current-ci-run --backend-source current-ci-run"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-package-ide-macos:
    name: Package IDE (macos)
    needs:
      - ide-ci-actions-workflow-definition-job-build-project-manager-macos
      - ide-ci-actions-workflow-definition-job-build-wasm-macos
    runs-on:
      - macos-latest
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run ide build --wasm-source current-ci-run --backend-source current-ci-run"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run ide build --wasm-source current-ci-run --backend-source current-ci-run"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-package-ide-windows:
    name: Package IDE (windows)
    needs:
      - ide-ci-actions-workflow-definition-job-build-project-manager-windows
      - ide-ci-actions-workflow-definition-job-build-wasm-windows
    runs-on:
      - self-hosted
      - Windows
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run ide build --wasm-source current-ci-run --backend-source current-ci-run"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run ide build --wasm-source current-ci-run --backend-source current-ci-run"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
  ide-ci-actions-workflow-definition-job-wasm-test-linux:
    name: WASM GUI tests (linux)
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run --help"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - run: "./run wasm test --no-native"
        if: "runner.os == 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
      - run: "./run wasm test --no-native"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
      - name: List files if failed
        run: ls -R
        if: failure()
env:
  ENSO_BUILD_SKIP_VERSION_CHECK: "true"

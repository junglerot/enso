# This file is auto-generated. Do not edit it manually!
# Edit the build/shader-tools/src/ci.rs module instead and run `cargo run --package enso-build-ci-gen`.

name: Package Tools
on:
  workflow_dispatch: {}
jobs:
  run-create-linux-latest:
    name: Run create (LinuxLatest)
    runs-on:
      - ubuntu-latest
    steps:
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - id: step_0
        run: cargo run --package enso-build-shader-tools --bin create
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PRIVATE_TOKEN }}
    outputs:
      ENSO_RELEASE_ID: ${{ steps.step_0.outputs.ENSO_RELEASE_ID }}
    timeout-minutes: 360
  run-package-linux-latest:
    name: Run package (LinuxLatest)
    needs:
      - run-create-linux-latest
    runs-on:
      - ubuntu-latest
    steps:
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - id: step_1
        run: cargo run --package enso-build-shader-tools --bin package
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PRIVATE_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.run-create-linux-latest.outputs.ENSO_RELEASE_ID }}
    timeout-minutes: 360
  run-package-mac-os-latest:
    name: Run package (MacOSLatest)
    needs:
      - run-create-linux-latest
    runs-on:
      - macos-latest
    steps:
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - id: step_3
        run: cargo run --package enso-build-shader-tools --bin package
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PRIVATE_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.run-create-linux-latest.outputs.ENSO_RELEASE_ID }}
    timeout-minutes: 360
  run-package-windows-latest:
    name: Run package (WindowsLatest)
    needs:
      - run-create-linux-latest
    runs-on:
      - windows-latest
    steps:
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - id: step_2
        run: cargo run --package enso-build-shader-tools --bin package
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PRIVATE_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.run-create-linux-latest.outputs.ENSO_RELEASE_ID }}
    timeout-minutes: 360
  run-publish-linux-latest:
    name: Run publish (LinuxLatest)
    needs:
      - run-create-linux-latest
      - run-package-linux-latest
      - run-package-mac-os-latest
      - run-package-windows-latest
    runs-on:
      - ubuntu-latest
    steps:
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - id: step_4
        run: cargo run --package enso-build-shader-tools --bin publish
        env:
          GITHUB_TOKEN: ${{ secrets.CI_PRIVATE_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.run-create-linux-latest.outputs.ENSO_RELEASE_ID }}
    timeout-minutes: 360
env:
  ENSO_BUILD_SKIP_VERSION_CHECK: "true"

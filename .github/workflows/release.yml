# This file is auto-generated. Do not edit it manually!
# Edit the enso_build::ci_gen module instead and run `cargo run --package enso-build-ci-gen`.

name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: What version number this release should get.
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        description: What version number this release should get.
        required: true
        type: string
jobs:
  enso-build-ci-gen-draft-release-linux:
    name: Create a release draft.
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: prepare
        run: ./run release create-draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      ENSO_RELEASE_ID: ${{ steps.prepare.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ steps.prepare.outputs.ENSO_VERSION }}
  enso-build-ci-gen-job-build-wasm-linux:
    name: Build GUI (WASM) (linux)
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run wasm build --wasm-upload-artifact ${{ runner.os == 'Linux' }}
        env:
          ENSO_AG_GRID_LICENSE_KEY: ${{ secrets.ENSO_AG_GRID_LICENSE_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  enso-build-ci-gen-job-deploy-gui-linux:
    name: Upload GUI to S3 (linux)
    needs:
      - enso-build-ci-gen-upload-ide-linux
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run release deploy-gui
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ARTEFACT_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTEFACT_S3_SECRET_ACCESS_KEY }}
          ENSO_ADMIN_TOKEN: ${{ secrets.ENSO_ADMIN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.CI_PRIVATE_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  enso-build-ci-gen-job-deploy-runtime-linux:
    name: Upload Runtime to ECR (linux)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-upload-backend-linux
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run release deploy-runtime
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ECR_PUSH_RUNTIME_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: eu-west-1
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_PUSH_RUNTIME_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.CI_PRIVATE_TOKEN }}
          crate_ECR_REPOSITORY: runtime
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-job-upload-backend-linux:
    name: Upload Backend (linux)
    needs:
      - enso-build-ci-gen-draft-release-linux
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run backend upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-job-upload-backend-macos:
    name: Upload Backend (macos)
    needs:
      - enso-build-ci-gen-draft-release-linux
    runs-on:
      - macos-latest
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run backend upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-job-upload-backend-windows:
    name: Upload Backend (windows)
    needs:
      - enso-build-ci-gen-draft-release-linux
    runs-on:
      - self-hosted
      - Windows
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run backend upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-publish-release-linux:
    name: Publish release (linux)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-deploy-gui-linux
      - enso-build-ci-gen-job-deploy-runtime-linux
      - enso-build-ci-gen-upload-ide-linux
      - enso-build-ci-gen-upload-ide-macos
      - enso-build-ci-gen-upload-ide-windows
      - enso-build-ci-gen-upload-ide2-linux
      - enso-build-ci-gen-upload-ide2-macos
      - enso-build-ci-gen-upload-ide2-windows
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run release publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.ARTEFACT_S3_ACCESS_KEY_ID }}
      AWS_REGION: us-west-1
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTEFACT_S3_SECRET_ACCESS_KEY }}
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-upload-ide-linux:
    name: Build Old IDE (linux)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-build-wasm-linux
      - enso-build-ci-gen-job-upload-backend-linux
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run ide upload --wasm-source current-ci-run --backend-source release --backend-release ${{env.ENSO_RELEASE_ID}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-upload-ide-macos:
    name: Build Old IDE (macos)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-build-wasm-linux
      - enso-build-ci-gen-job-upload-backend-macos
    runs-on:
      - macos-latest
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run ide upload --wasm-source current-ci-run --backend-source release --backend-release ${{env.ENSO_RELEASE_ID}}
        env:
          APPLEID: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
          APPLEIDPASS: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
          APPLETEAMID: ${{ secrets.APPLE_NOTARIZATION_TEAM_ID }}
          CSC_IDENTITY_AUTO_DISCOVERY: "true"
          CSC_KEY_PASSWORD: ${{ secrets.APPLE_CODE_SIGNING_CERT_PASSWORD }}
          CSC_LINK: ${{ secrets.APPLE_CODE_SIGNING_CERT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-upload-ide-windows:
    name: Build Old IDE (windows)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-build-wasm-linux
      - enso-build-ci-gen-job-upload-backend-windows
    runs-on:
      - self-hosted
      - Windows
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run ide upload --wasm-source current-ci-run --backend-source release --backend-release ${{env.ENSO_RELEASE_ID}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.MICROSOFT_CODE_SIGNING_CERT_PASSWORD }}
          WIN_CSC_LINK: ${{ secrets.MICROSOFT_CODE_SIGNING_CERT }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-upload-ide2-linux:
    name: Build New IDE (linux)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-upload-backend-linux
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run ide2 upload --backend-source release --backend-release ${{env.ENSO_RELEASE_ID}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-upload-ide2-macos:
    name: Build New IDE (macos)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-upload-backend-macos
    runs-on:
      - macos-latest
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run ide2 upload --backend-source release --backend-release ${{env.ENSO_RELEASE_ID}}
        env:
          APPLEID: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
          APPLEIDPASS: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
          APPLETEAMID: ${{ secrets.APPLE_NOTARIZATION_TEAM_ID }}
          CSC_IDENTITY_AUTO_DISCOVERY: "true"
          CSC_KEY_PASSWORD: ${{ secrets.APPLE_CODE_SIGNING_CERT_PASSWORD }}
          CSC_LINK: ${{ secrets.APPLE_CODE_SIGNING_CERT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
  enso-build-ci-gen-upload-ide2-windows:
    name: Build New IDE (windows)
    needs:
      - enso-build-ci-gen-draft-release-linux
      - enso-build-ci-gen-job-upload-backend-windows
    runs-on:
      - self-hosted
      - Windows
      - engine
    steps:
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.2.1
        with:
          update-conda: false
          conda-channels: anaconda, conda-forge
      - if: startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')
        name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: v0.10.2
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v6
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - if: runner.os == 'Windows'
        name: Workaround for https://github.com/actions/checkout/issues/590 (Windows)
        run: '"c:\Program Files\Git\bin\bash.exe" -c "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"'
        shell: cmd
      - if: runner.os != 'Windows'
        name: Workaround for  https://github.com/actions/checkout/issues/590 (non-Windows)
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
        shell: bash
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - name: Build Script Setup
        run: ./run --help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run ide2 upload --backend-source release --backend-release ${{env.ENSO_RELEASE_ID}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.MICROSOFT_CODE_SIGNING_CERT_PASSWORD }}
          WIN_CSC_LINK: ${{ secrets.MICROSOFT_CODE_SIGNING_CERT }}
      - if: failure() && runner.os == 'Windows'
        name: List files if failed (Windows)
        run: Get-ChildItem -Force -Recurse
      - if: failure() && runner.os != 'Windows'
        name: List files if failed (non-Windows)
        run: ls -lAR
      - if: "always() && always() && contains(github.event.pull_request.labels.*.name, 'CI: Clean build required')"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    env:
      ENSO_RELEASE_ID: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_RELEASE_ID }}
      ENSO_VERSION: ${{ needs.enso-build-ci-gen-draft-release-linux.outputs.ENSO_VERSION }}
env:
  ENSO_BUILD_SKIP_VERSION_CHECK: "true"
  ENSO_EDITION: ${{ inputs.version }}
  ENSO_VERSION: ${{ inputs.version }}
  RUST_BACKTRACE: full
concurrency: release

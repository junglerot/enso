[workspace]
resolver = "2"
# Listing only the "root" crates of each app/library. All path dependencies are included in the workspace automatically.
# If you want to add sub crate (like `app/gui/config` or `lib/rust/ensogl/examples`), just add it as a path dependency
# where plausible.
# Any GUI functionality that is not used by the main entry point should be defined somewhere with `examples` in the
# path, e.g. `lib/rust/ensogl/examples`, or `app/gui/view/examples`; this is used to optimize the application for
# loading the IDE.
members = [
  "app/gui",
  "app/gui/language/parser",
  "app/gui/enso-profiler-enso-data",
  "build/cli",
  "build/macros/proc-macro",
  "build/ci-gen",
  "build/cli",
  "build/intellij-run-config-gen",
  "build/deprecated/rust-scripts",
  "build/shader-tools",
  "lib/rust/*",
  "lib/rust/parser/src/syntax/tree/visitor",
  "lib/rust/parser/jni",
  "lib/rust/parser/generate-java",
  "lib/rust/parser/debug",
  "lib/rust/ensogl/pack",
  "lib/rust/profiler/data",
  "lib/rust/profiler/demo-data",
  "integration-test",
  "tools/language-server/logstat",
  "tools/language-server/wstest",
]
# The default memebers are those we want to check and test by default.
default-members = ["app/gui", "lib/rust/*"]

# We are using a version with extended functionality. The changes have been PR'd upstream:
# https://github.com/rustwasm/console_error_panic_hook/pull/24
# Remove this patch when the issue is resolved.
[patch.crates-io]
console_error_panic_hook = { git = 'https://github.com/enso-org/console_error_panic_hook' }

[profile.dev]
opt-level = 0
lto = false
debug = 0
debug-assertions = true

[profile.release]
opt-level = 3
lto = "thin"
codegen-units = 16
incremental = true
debug = false
debug-assertions = false

[profile.bench]
opt-level = 3
lto = true
debug = false
debug-assertions = false

[profile.test]
opt-level = 0
lto = false
debug = true
debug-assertions = true

[profile.integration-test]
inherits = "test"
opt-level = 2

[profile.buildscript]
inherits = "dev"
opt-level = 1
lto = false
debug = true
debug-assertions = true

[workspace.dependencies]
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !!!!!!!!!! WARNING !!!!!!!!!!
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# We are tryingto maintain minimum set of dependencies. Before adding a new dependency, consult it
# with the core development team. Thank you!
console-subscriber = "0.1.8"
nix = "0.26.1"
octocrab = { git = "https://github.com/enso-org/octocrab", default-features = false, features = [
  "rustls"
] }
regex = { version = "1.6.0" }
serde_yaml = { version = "0.9.16" }
serde-wasm-bindgen = { version = "0.4.5" }
tokio = { version = "1.23.0", features = ["full", "tracing"] }
tokio-util = { version = "0.7.4", features = ["full"] }
wasm-bindgen = { version = "0.2.83", features = ["serde-serialize"] }
wasm-bindgen-test = { version = "0.3.33" }
anyhow = { version = "1.0.66" }
failure = { version = "0.1.8" }
derive_more = { version = "0.99" }
assert_approx_eq = { version = "1.1.0" }
backtrace = { version = "0.3.53" }
boolinator = { version = "2.4.0" }
derivative = { version = "2.2" }
futures = { version = "0.3" }
itertools = { version = "0.10.5" }
lazy_static = { version = "1.4" }
paste = { version = "1.0" }
serde_json = { version = "1.0" }
smallvec = { version = "1.0.0" }
weak-table = { version = "0.3.0" }
gen-iter = { version = "0.2.1" }
js-sys = { version = "0.3" }
owned_ttf_parser = { version = "0.15.1" }
nalgebra = { version = "0.26.1", features = ["serde-serialize"] }
const_format = { version = "0.2.22" }
convert_case = { version = "0.6.0" }
multi-map = { version = "1.3.0" }
ordered-float = { version = "3.0.0" }
rustybuzz = { version = "0.5.1" }
bincode = { version = "2.0.0-rc.1" }
byte-unit = { version = "4.0.14", features = ["serde"] }
bytes = { version = "1.1.0" }
matches = { version = "0.1" }
console_error_panic_hook = { version = "0.1.6" }
reqwest = { version = "0.11.5" }
proc-macro2 = { version = "1.0.50" }
syn = { version = "1.0", features = [
  "full",
  "extra-traits",
  "printing",
  "parsing",
  "visit-mut",
] }
quote = { version = "1.0.23" }

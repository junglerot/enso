# This file is used to generate `target/<profile>/build/enso-build-<hash>/out/paths.rs`.
# Generation logic is in `ci_utils/src/paths.rs`.

<repo_root>/:
  .github/:
    workflows/:
      engine-benchmark.yml:
      std-libs-benchmark.yml:
      changelog.yml:
      gui.yml:
      nightly.yml:
      promote.yml:
      release.yml:
      scala-new.yml:
      shader-tools.yml:
  app/:
    gui/:
    gui2/: # The new, Vue-based GUI.
      dist/:
      public/:
        font-enso/:
        font-mplus1/:
        font-dejavu/:
      src/:
        assets/:
          font-enso.css:
          font-mplus1.css:
          font-dejavu.css:
    ide-desktop/:
      lib/:
        client/:
        content/:
        content-config/:
          src/:
            config.json:
        icons/:
        project-manager/:
  build/:
    prettier/:
  built-distribution/:
    enso-engine-<triple>/:
      ? path: enso-<version>/
        type: engine_package
        var: engine_package
    enso-project-manager-<triple>/:
      ? path: enso/
        type: project_manager_package
        var: project_manager_package
    enso-launcher-<triple>/:
      ? path: enso/
        type: launcher_package
        var: launcher_package
    enso-bundle-<triple>/:
      ? path: enso/
        type: launcher_bundle
        var: launcher_bundle
    "project-manager-bundle-<triple>":
      ? path: enso/
        type: project_manager_bundle
        var: project_manager_bundle
  dist/:
    gui/:
      assets/:
        dynamic-assets/: # Assets used by the WASM application.
        pkg.js: # The `pkg.js` artifact of wasm-pack WITH bundled snippets.
        pkg.js.map: # The sourcemap mapping to `pkg.js` generated by wasm-pack.
        pkg-opt.wasm: # The optimized WASM artifact.
        entrypoint.js:
        style.css:

    gui2/:
      assets/:

    # Final WASM artifacts in `dist` directory.
    wasm/:
      dynamic-assets/: # Assets used by the WASM application.
      pkg.js: # The `pkg.js` artifact of wasm-pack WITH bundled snippets.
      pkg.js.map: # The sourcemap mapping to `pkg.js` generated by wasm-pack.
      pkg.wasm: # The `pks_bg.wasm` artifact of wasm-pack.
      pkg-opt.wasm: # The optimized `pks_bg.wasm`.
  distribution/:
    editions/:
      <edition>.yaml:
    enso.bundle.template:
    launcher-manifest.yaml:
  engine/:
    runner/:
      src/:
        test/:
          resources/:
            Factorial.enso:
    runtime/:
      target/:
      bench-report.xml:
  lib/:
    rust/:
      parser/:
        generate-java/:
          java/:
  target/:
    ensogl-pack/:
      dist/: # Here ensogl-pack outputs its artifacts
    generated-java/:
    test-results/:
  test/:
    Benchmarks/:
  tools/:
    ci/:
      docker/:
        docker-entrypoint.sh:
        Dockerfile:
    simple-library-server/:
  std-bits/:
    benchmarks/:
      bench-report.xml:
  build.sbt:
  run:
  runner: # The runner native image (Linux only).
  CHANGELOG.md:

# Launcher Package
{ path: enso/, var: launcher_package }:
  bin/:
    enso<exe>:

# Project Manager Package
{ path: enso/, var: project_manager_package }:
  bin/:
    project-manager<exe>:

# Project Manager Bundle
# https://enso.org/docs/developer/enso/distribution/bundles.html#project-manager-bundle
{ path: project-manager/, var: project_manager_bundle }:
  bin/:
    project-manager<exe>:
  dist/:
    <version>/:
  runtime/:
  .enso.bundle:

# Engine Package aka Enso Version Package
# https://enso.org/docs/developer/enso/distribution/distribution.html#layout-of-an-enso-version-package
{ path: enso-<version>/, var: engine_package }:
  bin/:
  components/:
  editions/:
  lib/:
    Standard/:
  manifest.yaml:

# Launcher Bundle aka Portable Enso Distribution
# https://enso.org/docs/developer/enso/distribution/distribution.html#portable-enso-distribution-layout
{ path: enso/, var: launcher_bundle }:
  dist/:
    <version>/:
  edition/:
    <edition>.yaml:
  runtime/:
  .enso.portable:
